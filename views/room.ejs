<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <% if(iosAppId) { %>
      <meta name="apple-itunes-app" content="app-id=<%=iosAppId%>, app-argument=<%=iosURL%>">
    <% } %>
    <title><%= appName %></title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover'"/>
    <meta name="apple-mobile-web-app-capable" content="yes"/>
    
    <meta
      name="description"
      content="Vonage offers flexible and scalable voice, messaging,
      video and data capabilities across Unified Communications,
      Contact Centers and Communications APIs.This is a Free Video conferencing web application.">

    <!--[if IE]><link rel="shortcut icon" href="/favicon.ico"><![endif]-->
    <link rel="icon" href="/favicon.png">

    <link rel="stylesheet prefetch" href="/css/room-critical.opentok.css">

    <link rel="preload" href="/css/room.opentok.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="/css/room.opentok.css"></noscript>

    <link rel="preload" href="https://assets.tokbox.com/solutions/css/style.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="https://assets.tokbox.com/solutions/css/style.css"></noscript>

    <link rel="preload" href="/css/annotation.opentok.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="/css/annotation.opentok.css"></noscript>

    <% if (enableEmoji) { %>
        <script type=module>
          import 'https://unpkg.com/emoji-picker-element'
        </script>
    <% } %>

    <link rel="preconnect" href="https://code.jquery.com" >
    <link rel="preconnect" href="https://hlg.tokbox.com">
    <link rel="preconnect" href="https://in.hotjar.com">
    <link rel="preconnect" href="https://www.google-analytics.com">
    <link rel="preconnect" href="https://assets.tokbox.com">

    <link rel="dns-prefetch" href="https://static.opentok.com">
    <link rel="dns-prefetch" href="https://vars.hotjar.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://code.jquery.com">
    <link rel="dns-prefetch" href="https://cdnjs.cloudflare.com">

    <% if (useGoogleFonts) { %>
        <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin>
        <link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
    <% } else { %>
        <link rel="preload" href="/fonts/open-sans-v15-latin-regular.woff2" as="font" type="font/woff2" crossorigin>
        <link href="/css/fonts.css" rel="stylesheet">
    <% } %>
    
    <link rel="chrome-webstore-item" href="https://chrome.google.com/webstore/detail/<%=chromeExtensionId%>">
    <link rel="stylesheet" rel="preload" href="https://assets.tokbox.com/solutions/css/style.css">
    <% if (enableAnnotation && enableScreensharing) { %>
      <link rel="stylesheet" rel="prefetch" href="/css/annotation.opentok.css">
    <% } %>
    <link rel="stylesheet dns-prefetch" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/12.1.0/css/intlTelInput.css">

    <link rel="chrome-webstore-item" href="https://chrome.google.com/webstore/detail/<%=chromeExtensionId%>">
    <link rel="stylesheet prefetch" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/12.1.0/css/intlTelInput.css">

    <script src="https://cdn.jsdelivr.net/npm/@mediapipe/camera_utils/camera_utils.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@mediapipe/control_utils/control_utils.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@mediapipe/drawing_utils/drawing_utils.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/selfie_segmentation.js" crossorigin="anonymous"></script>

    
    <% if (adobeTrackingUrl) { %>
    <script src="<%=adobeTrackingUrl%>" async></script>
    <% } %>
    <script>
      window.apiKey='<%=apiKey%>';
      window.precallApiKey='<%=precallApiKey%>';
      window.precallSessionId='<%=precallSessionId%>';
      window.precallToken='<%=precallToken%>';
      window.showTos=<%=showTos%>;
      window.enablePrecallTest=<%=enablePrecallTest%>;
      window.enterButtonLabel='<%=enterButtonLabel%>';
      window.enableRoomLocking=<%=enableRoomLocking%>;
      window.showUnavailable=<%=showUnavailable%>;
      window.opentokJsUrl='<%=opentokJsUrl%>';
      window.feedbackUrl = '<%=feedbackUrl%>';
      window.publisherResolution = '<%=publisherResolution%>';
      window.maxUsersPerRoom = <%=maxUsersPerRoom%>;
      window.userName = "<%=userName%>";
      window.roomName = "<%=roomName%>";
      window.autoGenerateRoomName = <%=autoGenerateRoomName%>;
      window.publishAudio = <%=publishAudio%>;
      window.publishVideo = <%=publishVideo%>;
      window.introText='<%=introText%>';
      window.introFooterLinkText='<%=introFooterLinkText%>';
      window.introFooterLinkUrl='<%=introFooterLinkUrl%>';
      window.appName='<%=appName%>';
      window.helpLinkText1='<%=helpLinkText1%>';
      window.helpLinkUrl1='<%=helpLinkUrl1%>';
      window.helpLinkText2='<%=helpLinkText2%>';
      window.helpLinkUrl2='<%=helpLinkUrl2%>';
      var isMobile = function() { return window.matchMedia("only screen and (max-width: 480px)").matches; }

      const loadCss = (href) => {
        var head  = document.getElementsByTagName('head')[0];
        var link  = document.createElement('link');
        link.rel  = 'stylesheet';
        link.type = 'text/css';
        link.href = href;
        link.media = 'all';
        head.appendChild(link);
      };

      // feature detection for preload
      const supportsPreload = (function() {
        try {
          return document.createElement("link").relList.supports('preload');
        } catch(e) {
          return false;
        }
      }());

      if (!supportsPreload) {
        loadCss('/css/room.opentok.css');
        loadCss('https://assets.tokbox.com/solutions/css/style.css');
        loadCss('/css/annotation.opentok.css');
      }
      var mobileSettings = function() {

        var ids = ['toggleSharing', 'videoSwitch',
          'audioSwitch', 'showFeedback', 'screenShareErrors'];

        ids.forEach(function(id) {
          var elem = document.getElementById(id);
          elem && elem.classList.add('hidden');
        });
      };

      window.addEventListener('DOMContentLoaded', function loaded() {
        window.removeEventListener('DOMContentLoaded', loaded);
        if (isMobile()) {
            mobileSettings();
        }
      });
    </script>

    <script defer src="/js/vendor/clipboard.min.js"></script>
    <script defer src="/js/components/bubble.js"></script>
    <script defer src="/js/components/modal.js"></script>
    <script defer src="/js/vendor/lazy_loader.js"></script>
    <script defer src="/js/rtcApp.js"></script>
    <script defer src="<%= jqueryUrl %>/3.3.1/jquery.min.js"></script>

    <script >

const offScreenCanvases = {};
function createOffScreenCanvas() {
  if (typeof document !== 'undefined' ) {
    return document.createElement('canvas');
  } else if (typeof OffscreenCanvas !== 'undefined') {
    return new OffscreenCanvas(0, 0);
  } else {
    throw new Error('Cannot create a canvas in this context');
  }
}

function ensureOffscreenCanvasCreated(id) {
  if (!offScreenCanvases[id]) {
    offScreenCanvases[id] = createOffScreenCanvas();
  }
  return offScreenCanvases[id];
}

function drawWithCompositing(
    ctx,
    image,
    compositeOperation) {
  ctx.globalCompositeOperation = compositeOperation;
  ctx.drawImage(image, 0, 0);
}

function drawAndBlurImageOnCanvas(
    image, blurAmount, canvas) {
  const {height, width} = image;
  const ctx = canvas.getContext('2d');
  canvas.width = 1280;
  canvas.height = 720;
  ctx.clearRect(0, 0, width, height);
  ctx.save();
  (ctx).filter = `blur(${blurAmount}px)`;
  ctx.drawImage(image, 0, 0, width, height);
  ctx.restore();
}

function drawAndBlurImageOnOffScreenCanvas(
    image, blurAmount,
    offscreenCanvasName) {
  const canvas = ensureOffscreenCanvasCreated(offscreenCanvasName);
  drawAndBlurImageOnCanvas(image, blurAmount, canvas);
  return canvas;
}

   function removebg() {
    const videoElement = document.getElementsByClassName('OT_video-element')[0];
    const canvasElement = document.getElementsByClassName('output_canvas')[0];
    const canvasCtx = canvasElement.getContext('2d');

    function onResults(results) {
      const blurredImage = drawAndBlurImageOnOffScreenCanvas(
        results.image, 20, 'blurred');
        const blurredSegmentationMask = drawAndBlurImageOnOffScreenCanvas(
        results.segmentationMask, 10, 'blurmask');  
      canvasCtx.save();
      canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);
      canvasCtx.drawImage(
          results.image, 0, 0, canvasElement.width, canvasElement.height);
          drawWithCompositing(canvasCtx, blurredSegmentationMask, 'destination-in');
          drawWithCompositing(canvasCtx, blurredImage, 'destination-over');      
      canvasCtx.restore();
    }
      
    const selfieSegmentation = new SelfieSegmentation({locateFile: (file) => {
      return `https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/${file}`;
    }});
    selfieSegmentation.setOptions({
      modelSelection: 1,
      effect:'background'
    });
    selfieSegmentation.onResults(onResults);
    
    const camera = new Camera(videoElement, {
      onFrame: async () => {
        await selfieSegmentation.send({image: videoElement});
      },
      width: 1280,
      height: 720
    });
    camera.start();
}

      </script>

    <% if (oneTrustCookieConsentUrl) { %>
    <!-- OneTrust Cookies Consent Notice start -->
    <script defer src="<%=oneTrustCookieConsentUrl%>" type="text/javascript" charset="UTF-8"></script>
    <script defer type="text/javascript">
    function OptanonWrapper() { }
    </script>
    <% } %>
    <!-- OneTrust Cookies Consent Notice end -->

    <% if (enableFeedback && hotjarId && hotjarVersion ) { %>
    <script>
        (function(h,o,t,j,a,r){
         h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
         h._hjSettings={hjid: <%=hotjarId%>,hjsv: <%=hotjarVersion%>};
         a=o.getElementsByTagName('head')[0];
         r=o.createElement('script');r.async=1;
         r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
         a.appendChild(r);
     })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
     </script>
      <% } %>
  </head>

  <body class="forbidden">

    <div id="top-banner">
      <div class="icon-container">
        <a href="https://vonage.com" title="Vonage" target="_blank" rel="noopener">
          <i data-icon="vonage_logo"></i>
        </a>
      </div>
      <div class="center-container">
        <div class="room-info">
          <div class="name-wrapper">
            <i id="room-locked-state" data-icon="closedLock" title="This room is locked. No additional participants may join the room."></i>
            <p class="room-name"><%= appName %></p>
          </div>
          <div class="participants-wrapper">
            <i data-icon="participants"></i><span id="participantsStr"></span>
          </div>
        </div>
      </div>
      <div class="right-container">
        <% if (enableStopReceivingVideo) { %>
        <div class="videoSwitch">
          <a id="videoSwitch" disabled>
            <span>Stop receiving video</span>
            <i data-icon="videoSwitch"></i>
          </a>
        </div>
        <% } %>
        <%   if(enableArchiving) { %>
        <div id="toggleArchiving" disabled>
          <a id="startArchiving" class="banner-dynamic-btn">
            <i data-icon="start_archive"></i>
            <span>Record</span>
          </a>
          <a id="stopArchiving" class="banner-dynamic-btn">
            <i data-icon="stop_archive"></i>
            <span class="duration">Stop Recording</span>
          </a>
        </div>
        <%      if(enableArchiveManager) { %>
        <div id="manageRecordings">
          <a id="viewRecordings"  class="btn btn-purple btn-padding"><span id="recordings">0</span></a>
        </div>
        <% } } %>
        <a class="banner-dynamic-btn invite-btn" id="addToCall">
          <i data-icon="add"></i>
          <span>Invite</span>
        </a>
        <a id="chooseLayout">
          <div id="options-container">
            <i id="options-icon" data-icon="options-icon"></i>
          </div>
        </a>
      </div>
    </div>
    <section id="screen">
      <div class="streams">
        <div class="tc-list">
          <ul>
            <li class="stream"><canvas class="output_canvas" width="1280px" height="720px"></canvas></li>
          </ul>
        </div>
      </div>
      <div class="call-controls" id="call-controls">
        <div>
          <button id="endCall" disabled>
            <i data-icon="end_call"></i>
          </button>
          <p>Leave</p>
        </div>
        <div>
          <button id="toggle-publisher-video" class="selected" disabled>
            <i data-icon="no_video" data-event-name="roomView:buttonClick" data-action="video" data-stream-id="publisher" data-stream-type="publisher"></i>
          </button>
          <p>Your Video</p>
        </div>
        <div>
          <button id="toggle-publisher-audio" disabled>
            <i data-icon="mic-muted"></i>
          </button>
          <p>Your Mic</p>
        </div>
        <div id="addToCall-container">
          <button id="addToCall">
            <i data-icon="add"></i>
          </button>
          <p>Invite</p>
        </div>
        <div id="blurBg-container">
          <button id="blurBg">
            <i data-icon="blur_bg"></i>
          </button>
          <p>Blur BG</p>
        </div>
        <% if (enableScreensharing) { %>
        <div id="screen-share-container">
          <button id="screen-share" disabled>
            <i data-icon="screenshare"></i>
          </button>
          <p>Share Screen</p>
        </div>
        <% if (enableAnnotation) { %>
        <div id="annotate-button-container">
          <button id="annotate" disabled>
            <i data-icon="annotate"></i>
          </button>
          <p>Annotate</p>
        </div>
        <% } } %>
        <div>
          <button id="message-btn" disabled>
            <i data-icon="message"></i>
          </button>
          <p>Chat
            <span id="unreadCount"></span>
          </p>
        </div>
      </div>
    </section>

    <% if (feedbackUrl) { %>
      <section class="feedbackButton">
        <span id="showFeedback">Feedback / Report a Bug</span>
      </section>
    <% } %>

    <section id="chat">
      <form class="dialog-chat" id="chatForm">
        <header>

          <div class="chat-title">
            <i data-icon="message_silver"></i>
            <span>Messaging</span>
          </div>
          <i id="closeChat" data-icon="close_silver"></i>
        </header>
        <div id="chatMsgs" class="tc-list">
          <ul>
          </ul>
        </div>
        <footer>
          <textarea id="msgText" placeholder="Type your message..." required></textarea>
          <button id="sendTxt" type="submit" alt="Send Message" data-icon="send" class="btn btn-purple btn-padding btn-padding-small"></button>
          <% if (enableEmoji) { %>
            <button id="addEmoji" alt="Add Emoji"  data-icon="emoji" class="btn1"></button>
          <% } %>
        </footer>
        <% if (enableEmoji) { %>
        <emoji-picker class="light"></emoji-picker>
        <% } %>
      </form>
    </section>

    <section id="screenShareErrors" class="screen-modal tc-modal">
      <div class="tc-dialog">
        <i data-icon="close_gray" class="close"></i>
        <section id="screenShareErrorMsg">
          <header class="errorTitle"></header>
          <p class="errorDescription"></p>
        </section>
        <section id="screenShareErrorInstall">
          <header>You need a Chrome extension to share your screen.</header>
            <p>Once you have installed it, refresh your browser and click 'share screen' again.</p>
            <footer>
              <button class="btn btn-purple btn-padding delete-archive">Install extension</button>
            </footer>
        </section>
        <section id="extInstallationSuccessful">
          <header>You need a Chrome extension to share your screen.</header>
          <p>Once you have installed it, refresh your browser and click 'share screen' again.</p>
          <footer>
            <button id="scrShrLater" class="btn btn-white btn-padding">Later</button>
            <button id="scrShrReload" class="btn btn-purple btn-padding">Reload</button>
          </footer>
        </section>
      </div>
    </section>

    <section for="viewRecordings" class="bubble" data-recordings="loading">
      <div class="bubble-content top-arrow">
        <p class="title recordings">Your recordings</p>
        <p class="title no-recordings">No recordings</p>
        <p class="title loading">Loading archived recordings...</p>
        <div class="tc-list videos">
          <ul></ul>
        </div>
      </div>
    </section>

    <section for="chooseLayout" class="bubble">
      <div class="bubble-content top-arrow">
        <div id="top-icons-container">
          <% if (enableRoomLocking) { %>
            <div class="source-pick-container">
              <div id="lockRoomContainer" class="sourcePick icon-with-text">
                <a id="lockRoom"><i id="lock-room-icon" data-icon="openLock"></i></a>
                <span id="lock-msg">Lock Meeting</span>
              </div>
            </div>
          <% } %>
          <div class="source-pick-container">
            <div id="pickMicContainer" class="sourcePick icon-with-text">
              <a id="pickMic"><i data-icon="pmic"></i></a>
              <span>Switch Microphone</span>
            </div>
          </div>
          <div class="source-pick-container">
            <div id="pickCamContainer" class="sourcePick icon-with-text">
              <a id="toggleFacingMode"><i data-icon="cycleVideo"></i></a>
              <span>Switch Camera</span>
            </div>
          </div>
        <% if (enableMuteAll) { %>
          <div class="source-pick-container">
            <div id="muteAllContainer" class="sourcePick icon-with-text">
              <a id="muteAllIconButton"><i data-icon="muteAllButton"></i></a>
              <span>Mute all participants</span>
            </div>
          </div>
        <% } %>
        </div>
        <div id="layout-manager">
          <span id="layout-title">Layout Manager</span>
          <ul>
            <li><a data-layout-type="float"></a></li>
            <li><a data-layout-type="f2f_horizontal"></a></li>
            <li><a data-layout-type="grid"></a></li>
            <li><a data-layout-type="f2f_vertical"></a></li>
            <li><a data-layout-type="hangout_horizontal"></a></li>
            <li><a data-layout-type="hangout_vertical"></a></li>
          </ul>
        </div>
      </div>
    </section>
   
    <section class="tc-modal feedback-report">
      <div class="tc-dialog">
      <header>
        <i data-icon="close_gray_full" class="close"></i>
        <div class="title-container">
            <div class="title" data-tab="feedback">
              <span>Share Your Feedback</span>
            </div>
          </div>
      </header>
      <section data-tab="feedback">
        <form>
        <div class="call-quality-feedback">
          <span class="feedback-title">How was the audio quality?</span>
          <div class="audio-feedback">
            <div class="feedback-dropdown">
              <select class="audio-score">
                  <option value="5">Excellent! No issues.</option>
                  <option value="4">Good! Not perfect but not annoying.</option>
                  <option value="3" selected="selected">It was ok. I had a few issues.</option>
                  <option value="2">Poor. Annoying.</option>
                  <option value="1">I'm disappointed.</option>
              </select>
            </div>
          </div>
          <div class="video-feedback">
            <span class="feedback-title">How was the video quality?</span>
            <div class="feedback-dropdown">
                <select class="video-score">
                    <option value="5">Excellent! No issues.</option>
                    <option value="4">Good! Not perfect but not annoying.</option>
                    <option value="3" selected="selected">It was ok. I had a few issues.</option>
                    <option value="2">Poor. Annoying.</option>
                    <option value="1">I'm disappointed.</option>
                </select>
            </div>
          </div>
        </div>
        <div class="feedback-suggestion">
            <span class="feedback-title suggestion-title">Any other info?</span>
            <input class="other-info" placeholder="What's on your mind?" />
        </div>
        <button class="btn btn-purple btn-padding send-feedback">Send Feedback</button>
      </form>
      </section>

    </div>
  </section>

    <section class="tc-modal archive-delete-modal">
      <form class="tc-dialog">
        <i data-icon="close_gray" class="close"></i>
        <header>Delete <span class="username"></span>'s Archive</header>
        <p>Are you sure you want to delete this archive?</p>
        <footer>
          <button class="btn btn-purple btn-padding">Cancel</button>
          <button class="btn btn-black btn-padding delete-archive">Delete</button>
        </footer>
      </form>
    </section>

    <section class="tc-modal add-to-call-modal">
      <div class="tc-dialog">
        <header>
          <i data-icon="close_gray_full" class="close"></i>
          <div class="title" data-tab="feedback">
            <span>Invite people to this meeting</span>
          </div>
        </header>
        <secton class="dialog-content">
          <p>Copy the link below and send it to a family member, friend, or coworker!</p>
          <p class="current-url" readonly id="current-url"></p>
          <button id="copyInviteLinkBtn" class="btn btn-black btn-padding"> Copy</button>
          <%   if(hasSip) { %>
          <div class="google-sign-in-note-container">
            <div class="google-sign-in-note">
              <span class=title>Note:</span><br/>
              <span>This function requires you to sign in with your <b><%=authDomain%></b> Google account</span>
            </div>
          </div>
          <form id="dialOutForm">
            <input id="dialOutNumber" class="phoneNumber" required>
            <button id="dialOutBtn" class="btn btn-black btn-padding">Dial</button>
          </form>
          <% } %>
      </secton>
      </div>
    </section>

    <section id="switchAlerts" class="tc-modal switch-alert-modal">
      <form class="tc-dialog">
        <i data-icon="close_gray" class="close"></i>
        <header><span class="msg"></span></header>
        <p class="detail"></p>
        <select id="select-devices" class="devices"></select>
        <footer>
          <button class="btn btn-black btn-padding accept"></button>
        </footer>
      </form>
    </section>

    <section class="tc-modal room-unlocked-modal">
      <form id="room-unlocked-alert" class="tc-dialog">
        <i data-icon="openLock"></i>
        <span> Meeting unlocked </span>
      </form>
    </section>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-462500-32', 'auto');
      ga('send', 'pageview');

    </script>
    <% if (adobeTrackingUrl) { %>
    <script type="text/javascript">
      var digitalData = {
        page: {
          pageInfo: {
            pageName: 'biz:api:tokbox meetings:freeconferencing:in-meeting',
            lob: 'biz',
            functionDept: '<%=ATFunctionDept%>',
            subCategory1: '',
            subCategory2:'',
            subCategory3: '',
            primaryCategory: '<%=ATPrimaryCategory%>',
            internalSearchTerm: '',
            internalSearchResults: '',
            error: '',
            pageType: '',
            language: '<%=userLanguage%>',
            country: '<%=userCountry%>',
            fileGatedType: '',
            tollFreeNumber: '',
            siteIdentifier: '<%=ATSiteIdentifier%>',
            type: '',
            pageCategory: '',
            pageSubCategory: '',
          },
          content: {
            name: '',
            category: '',
            author: '',
            type: '',
            publishDate: '',
            subCategory: '',
            topic: '',
            industry: '',
            businessSize: '',
            profRole: '',
            company: '',
            product: '',
          },
        },
        user: {
          profile: {
            profileInfo: {
              targetExperience: '',
              responsiveSiteVersion: 'desktop',
              visitorType: 'prospect',
              gaCampaign: '',
            },
          },
        },
        transaction: {
          item: {
            quantity: '',
            price: '',
            productInfo: '',
          },
        },
        eventData: {
          fIndustry: '',
          fName: '',
          fCTA: '',
          fLines: '',
          linesSlider: '',
          interactionType: '',
          events: '',
        },
      };
      (function(){
        var width = window.screen.width;
        var responsive = ( width < 768 ) ? "mobile" : ( width < 960 ) ? "tablet" : "desktop";
        digitalData.user.profile.profileInfo.responsiveSiteVersion = responsive;
      })();
      if (typeof _satellite !== "undefined") _satellite.pageBottom();
    </script>
    <% } %>
  </body>
</html>
